# Golang CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

executors:
  golang:
    docker:
    - image: cimg/go:1.22.0

jobs:
  codespell:
    docker:
    - image: cimg/python:3.12
    steps:
    - checkout
    - run: pip3 install codespell
    - run: codespell --skip=".git,./vendor"

  build:
    docker:
    - image: cimg/go:1.21
    environment:
    - DOCKER_IMAGE_NAME: "mjtrangoni/flexlm_exporter"
    - QUAY_IMAGE_NAME: "quay.io/mjtrangoni/flexlm_exporter"
    - GHCR_IMAGE_NAME: "ghcr.io/mjtrangoni/flexlm_exporter"
    steps:
     # checkout the project
    - checkout

    # make and test
    - run:
        name: Binary Build
        command: make

    - setup_remote_docker:
        version: edge
        docker_layer_caching: true

    # ghcr.io build
    - run:
        name: GHCR Build
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            docker build -t $GHCR_IMAGE_NAME:latest -t $GHCR_IMAGE_NAME:$CIRCLE_TAG .
          else
            docker build -t $GHCR_IMAGE_NAME:$CIRCLE_BRANCH .
          fi
    - run:
        name: GHCR Login
        command: echo $GHCR_TOKEN | docker login ghcr.io -u $GHCR_USERNAME --password-stdin
    - run:
        name: GHCR Push
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            docker push $GHCR_IMAGE_NAME:latest
            docker push $GHCR_IMAGE_NAME:$CIRCLE_TAG
          else
            docker push $GHCR_IMAGE_NAME:$CIRCLE_BRANCH
          fi

    # quay.io build
    - run:
        name: Quay Build
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            docker build -t $QUAY_IMAGE_NAME:latest -t $QUAY_IMAGE_NAME:$CIRCLE_TAG .
          else
            docker build -t $QUAY_IMAGE_NAME:$CIRCLE_BRANCH .
          fi
    - run:
        name: QUAY Login
        command: echo $QUAYPASSWORD | docker login quay.io -u $QUAYLOGIN --password-stdin
    - run:
        name: QUAY Push
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            docker push $QUAY_IMAGE_NAME:latest
            docker push $QUAY_IMAGE_NAME:$CIRCLE_TAG
          else
            docker push $QUAY_IMAGE_NAME:$CIRCLE_BRANCH
          fi

    - run:
        name: Docker Build
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            docker build -t $DOCKER_IMAGE_NAME:latest -t $DOCKER_IMAGE_NAME:$CIRCLE_TAG .
          else
            docker build -t $DOCKER_IMAGE_NAME:$CIRCLE_BRANCH .
          fi
    - run:
        name: Docker Login
        command: echo $DOCKER_PASSWORD | docker login docker.io -u $DOCKER_LOGIN --password-stdin
    - run:
        name: Docker Push
        command: |
          if [ -n "$CIRCLE_TAG" ]; then
            docker push $DOCKER_IMAGE_NAME:latest
            docker push $DOCKER_IMAGE_NAME:$CIRCLE_TAG
          else
            docker push $DOCKER_IMAGE_NAME:$CIRCLE_BRANCH
          fi

  release:
    executor: golang
    steps:
    - checkout
    - add_ssh_keys:
        fingerprints:
        - "f5:e9:3e:54:1e:4d:db:c8:14:27:1f:8d:60:9f:4e:f5"
    - run:
        name: Release binaries
        command: |
          go install github.com/prometheus/promu@v0.15.0
          curl -sfL https://goreleaser.com/static/run | DISTRIBUTION=oss bash

workflows:
  version: 2
  flexlm_exporter:
    jobs:
    - codespell:
        filters:
          branches:
            only: main
          tags:
            only: /.*/
    - build:
        # This enable the environment variables
        context: org-global
        filters:
          branches:
            only:
            - main
          tags:
            only:
            - /v[0-9]+(\.[0-9]+)*(-.*)*/
    - release:
        filters:
          branches:
            ignore: /.*/
          tags:
            only: /v[0-9]+(\.[0-9]+)*(-.*)*/
